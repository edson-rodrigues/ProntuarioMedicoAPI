// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProntuarioMedicoAPI.Models;

#nullable disable

namespace ProntuarioMedicoAPI.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.Medico", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicoId"));

                    b.Property<int>("CRM")
                        .HasColumnType("int");

                    b.Property<string>("CRMState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicoId");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.MedicoPaciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.HasKey("PacienteId", "MedicoId");

                    b.HasIndex("MedicoId");

                    b.ToTable("MedicoPacientes");
                });

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacienteId"));

                    b.Property<string>("BiologicGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProntuarioId")
                        .HasColumnType("int");

                    b.HasKey("PacienteId");

                    b.HasIndex("ProntuarioId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.Prontuario", b =>
                {
                    b.Property<int>("ProntuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProntuarioId"));

                    b.HasKey("ProntuarioId");

                    b.ToTable("Prontuarios");
                });

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.ResultadosExames", b =>
                {
                    b.Property<int>("ResultadoExamesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultadoExamesId"));

                    b.Property<bool>("Pronto")
                        .HasColumnType("bit");

                    b.Property<int?>("ProntuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResultadoExamesId");

                    b.HasIndex("ProntuarioId");

                    b.ToTable("ResultadosExames");
                });

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.MedicoPaciente", b =>
                {
                    b.HasOne("ProntuarioMedicoAPI.Models.Medico", "Medico")
                        .WithMany("Pacientes")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProntuarioMedicoAPI.Models.Paciente", "Paciente")
                        .WithMany("Medicos")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.Paciente", b =>
                {
                    b.HasOne("ProntuarioMedicoAPI.Models.Prontuario", "Prontuario")
                        .WithMany()
                        .HasForeignKey("ProntuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prontuario");
                });

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.ResultadosExames", b =>
                {
                    b.HasOne("ProntuarioMedicoAPI.Models.Prontuario", null)
                        .WithMany("ResultadosExames")
                        .HasForeignKey("ProntuarioId");
                });

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.Medico", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.Paciente", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("ProntuarioMedicoAPI.Models.Prontuario", b =>
                {
                    b.Navigation("ResultadosExames");
                });
#pragma warning restore 612, 618
        }
    }
}
